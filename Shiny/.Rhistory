b<-unname(sapply(a, function(i)paste(sort(unlist(strsplit(i, ""))), collapse="")))
b<-unique(b)
sort(b)
Fibonacci <- function(n) {
if (n==1) {
x <- 0
} else {
x <- c(0,1)
while (length(x) < n) {
position <- length(x)
new <- x[position] + x[position-1]
x <- c(x,new)
}
}
return(x)
}
collatz_conjecture<-function(N)
{
if(N %% 2==0)
N<-N/2
else(N %% 2!=0)
N<-3N+1/2
}
collatz_conjecture<-function(N)
{
if(N %% 2==0)
{
N=N/2
}
else if (N %% 2!=0)
{
N<-3N+1/2
}
}
collatz_conjecture<-function(N)
{
if(N %% 2==0)
{
X=N/2
}
else if (N %% 2!=0)
{
X<-3N+1/2
}
}
collatz_conjecture<-function(N)
{
if(N %% 2==0)
{
X=N/2
}
else if (N %% 2!=0)
{
X<-(3N+1)/2
}
}
Fibonacci <- function(n) {
if (n %% 2==0) {
x <- n/2
} else {
x <- c(0,1)
}
return(x)
}
Fibonacci <- function(n) {
if (n %% 2==0) {
x <- n/2
} else if(n %% 2 !=0){
x <- c(0,1)
}
return(x)
}
Fibonacci <- function(n) {
if (n %% 2==0) {
x <- n/2
} else if(n %% 2 !=0){
x <- (3n+1)/2
}
return(x)
}
Fibonacci <- function(n) {
if (n %% 2==0) {
x <- n/2
} else if(n %% 2 !=0){
x <- (3*n+1)/2
}
return(x)
}
collatz_conjecture<-function(N)
{
if(N %% 2==0)
{
X=N/2
}
else if (N %% 2!=0)
{
X<-(3*N+1)/2
}
}
collatz_conjecture(111)
collatz_conjecture<-function(N)
{
if(N %% 2==0)
{
X=N/2
}
else if (N %% 2!=0)
{
X<-(3*N+1)/2
}
return(X)
}
collatz_conjecture(111)
collatz_conjecture<-function(N)
{
for(i in 1:5)
{
if(N %% 2==0)
{
X=N/2
}
else if (N %% 2!=0)
{
X<-(3*N+1)/2
}
}
return(X)
}
collatz_conjecture(111)
collatz_conjecture<-function(N)
{
for(i in 1:5)
{
if(N %% 2==0)
{
X=N/2
}
else if (N %% 2!=0)
{
X<-(3*N+1)/2
}
i<-i+1
}
return(X)
}
collatz_conjecture(111)
collatz_conjecture<-function(N)
{
for(i in 1:5)
{
if(N %% 2==0)
{
X=N/2
}
else if (N %% 2!=0)
{
X<-(3*N+1)/2
}
return(X)
}
return(X)
}
collatz_conjecture(111)
collatz_conjecture(111)
collatz_conjecture<-function(N)
{
for(i in 1:5)
{
if(N %% 2==0)
{
N=N/2
}
else if (N %% 2!=0)
{
N<-(3*N+1)/2
}
}
return(N)
}
collatz_conjecture(111)
collatz_conjecture<-function(N)
{
for(i in 1:5)
{
if(N %% 2==0)
{
N=N/2
}
else if (N %% 2!=0)
{
N<-(3*N+1)/2
}
return(N)
}
}
collatz_conjecture(111)
collatz_conjecture<-function(N)
{
for(i in 1:5)
{
if(N %% 2==0)
{
N=N/2
}
else if (N %% 2!=0)
{
N<-(3*N+1)/2
}
}
X<-N
return(X)
}
collatz_conjecture(111)
pbinom(2,3,.5)
rbinom(2,3,.5)
rbinom(3,2,.5)
sample.space<-c("H","T")
theta<-0.5
N<-20
flips<-sample(sample.space,size = N,replace = TRUE,prob = c(theta,1-theta))
flips
sample.space<-c("H","T")
theta<-0.5
N<-3
flips<-sample(sample.space,size = N,replace = TRUE,prob = c(theta,1-theta))
flips
flips
flips
flips
flips<-rbinom(n=N,size = 1,prob =theta)
flips
flips
flips
flips
1/(1+exp(-0.5))
1/(1+exp(1))
1/(1+exp(-1))
hotel <- read.csv("F:/Hotel Dataset.csv")
View(hotel)
hotel$H1Total_rev<-hotel$H1Room.Revenue+hotel$H1Food.and.Beverage.Revenue+hotel$H1Other.Revenue
View(hotel)
summary(hotel)
hotel2<-hotel
hotel2$H1Occupied.Rooms<-as.numeric(as.character(hotel2$H1Occupied.Rooms))
View(hotel2)
hotel2<-hotel
str(hotel2$H1Occupied.Rooms)
as.numeric(hotel2$H1Occupied.Rooms)
as.character(hotel2$H1Occupied.Rooms)
ch<-as.character(hotel2$H1Occupied.Rooms)
as.numeric(hotel2$H1Occupied.Rooms)
as.numeric(ch)
tax <- read.csv("F:/Historic_Secured_Property_Tax_Rolls.csv")
View(tax)
lib
library(devtools)
install_github("andreacirilloac/ramazon")
library(ramazon)
ramazon(public_DNS ="ec2-52-87-237-147.compute-1.amazonaws.com", key_pair_name = "SurajInstance")
url<-"http://www.alocalattorney.com/find-an-attorney/"
html_source<-readLines(url,encoding = "UTF-8")
alllinks<-c()
links<-xpathSApply(html_parsed,"//a/@href")
library(SnowballC)
library(RCurl)
library(XML)
library(RSelenium)
html_parsed<-htmlTreeParse(url,useInternalNodes = T)
html_parsed<-htmlTreeParse(url,useInternalNodes = T)
alllinks<-c()
links<-xpathSApply(html_parsed,"//a/@href")
match<- which(grepl("lawyer",links))
links<-unique(links[match])
alllinks<-c(alllinks,links)
save.image()
name<-xpathSApply(df, "//div[@class='item-title']//h3", xmlValue)
name<-xpathSApply(html_parsed, "//div[@class='item-title']//h3", xmlValue)
category<-xpathSApply(html_parsed, "//span[@class='item-category']", xmlValue)
lawyers<-as.data.frame(cbind(name,category))
save.image()
links<-as.data.frame(alllinks)
View(links)
gsub("/","",alllinks)
gsub("\"http://","",alllinks)
alllinks<-links[128:254,]
links<-xpathSApply(html_parsed,"//a/@href")
match<- which(grepl("lawyer",links))
links<-unique(links[match])
alllinks<-c()
alllinks<-c(alllinks,links)
url2<-"http://42lawyers.com/alabama/"
html_parsed2<-htmlTreeParse(url2,useInternalNodes = T)
alllinks<-c()
links<-xpathSApply(html_parsed,"//a/@href")
links2<-xpathSApply(html_parsed2,"//a/@href")
alllinks2<-as.data.frame(links2)
View(alllinks2)
match<- which(grepl("alabama",links2))
links2<-unique(links[match])
alllinks2<-c()
alllinks<-c(alllinks,links)
alllinks2<-c(alllinks2,links2)
alllinks2
library(SnowballC)
library(RCurl)
library(XML)
library(RSelenium)
save.image()
sample_submission <- read.csv("F:/Kaggle/Santander/sample_submission.csv")
View(sample_submission)
setwd("F:/Blog/VGSales/Shiny")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
sales_year_global<-as.data.frame(aggregate(vgsales_nintendo$Global_Sales,by=list(Year=vgsales_nintendo$Year),FUN=sum))
View(sales_year_global)
View(sales_year_global)
sales_year_global<-sales_year_global[-nrow(sales_year_global),]
View(sales_year_global)
runApp()
runApp()
sales_year_global<-as.data.frame(aggregate(vgsales_nintendo$Global_Sales,by=list(Year=vgsales_nintendo$Year),FUN=sum))
View(sales_year_global)
colnames(sales_year_global)<-c("Year","total_sales")
sales_year_NA<-as.data.frame(aggregate(vgsales_nintendo$NA_Sales,by=list(Year=vgsales_nintendo$Year),FUN=sum))
colnames(sales_year_NA)<-c("Year","total_sales")
View(sales_year_NA)
sales_year_EU<-as.data.frame(aggregate(vgsales_nintendo$EU_Sales,by=list(Year=vgsales_nintendo$Year),FUN=sum))
colnames(sales_year_EU)<-c("Year","total_sales")
sales_year_JP<-as.data.frame(aggregate(vgsales_nintendo$JP_Sales,by=list(Year=vgsales_nintendo$Year),FUN=sum))
colnames(sales_year_JP)<-c("Year","total_sales")
sales_year_Others<-as.data.frame(aggregate(vgsales_nintendo$Other_Sales,by=list(Year=vgsales_nintendo$Year),FUN=sum))
colnames(sales_year_Others)<-c("Year","total_sales")
merge1<-merge(sales_year_NA,sales_year_EU,by="Year")
colnames(merge1)<-c("Year","NA_sales","EU_Sales")
View(merge1)
merge2<-merge(merge1,sales_year_JP,by="Year")
colnames(merge2)<-c("Year","NA_sales","EU_Sales","JP_Sales")
View(merge2)
merge3<-merge(merge2,sales_year_Others,by="Year")
colnames(merge3)<-c("Year","NA","EU","JP","Others")
year_country_sales<-merge3
View(year_country_sales)
write.csv(year_country_sales,"year_country_sales.csv",row.names = FALSE)
runApp()
line<-gvisLineChart(year_country_sales,"Year",c("NA_Sales","EU_Sales","JP_Sales","Other_Sales"), options = list(title="Sales by countries per year Comparison",width=1000,height=500))
line<-gvisLineChart(year_country_sales,"Year",c("NA","EU","JP","Others"), options = list(title="Sales by countries per year Comparison",width=1000,height=500))
View(year_country_sales)
View(year_country_sales)
year_country_sales<-read.csv("./Data/year_country_sales.csv")
View(year_country_sales)
line<-gvisLineChart(year_country_sales,"Year",c("NA","EU","JP","Others"), options = list(title="Sales by countries per year Comparison",width=1000,height=500))
line<-gvisLineChart(year_country_sales,"Year",c("NA.","EU","JP","Others"), options = list(title="Sales by countries per year Comparison",width=1000,height=500))
plot(line)
runApp()
runApp()
runApp()
View(sales_year_global)
runApp()
sales_year_global<-sales_year_global[-nrow(sales_year_global),]
write.csv(sales_year_global,"sales.csv",row.names = FALSE)
ts_sales<-ts(sales_year_global$total_sales,start = 1983)
ts_sales<-ts(sales_year_global$total_sales,start = 1983)
plot(ts_sales,xlab="Time",ylab="Sales in Millions",main="Times Series of Global Sales",col="red",lwd=3)
library(forecast)
ets_sales<-ets(ts_sales)
forecast_sales_ets<-forecast(ets_sales,h=4)
plot(forecast_sales,xlab="Time",ylab="Sales in Millions",main="Prediction of Global Sales till 2020(ETS)",col="red",lwd=3)
forecast_sales_ets<-forecast(ets_sales,h=4)
plot(forecast_sales_ets,xlab="Time",ylab="Sales in Millions",main="Prediction of Global Sales till 2020(ETS)",col="red",lwd=3)
arima_sales<-auto.arima(ts_sales)
forecast_sales_arima<-forecast(arima_sales,h=4)
plot(forecast_sales_arima,xlab="Time",ylab="Sales in Millions",main="Prediction of Global Sales till 2020(Arima)",col="orange",lwd=3)
vgsales <- read.csv("F:/Blog/VGSales/vgsales.csv")
View(vgsales)
aggregate(vgsales$Platform,FUN=sum())
aggregate(vgsales$Platform,FUN=sum)
table(vgsales$Platform)
sales_platform<-as.data.frame(table(vgsales$Platform))
colnames(sales_platform)<-c("platform","Numbers")
View(sales_platform)
sales_platform<-sales_platform[order(-sales_platform$Numbers),]
top_20_sales_platform<-head(sales_platform,n=20)
View(top_20_sales_platform)
ggplot(top_20_sales_platform,aes(x=reorder(platform,Numbers),y=Numbers))+geom_bar(stat="identity",fill="steelblue")+theme_minimal()+coord_flip()+geom_text(aes(label=Numbers),vjust=0.5,color="black",size=4.0)+ylab("Global Sales in Millions")+xlab("Platform")+ggtitle("Top Global Selling Game Platform")
ggplot(top_20_sales_platform,aes(x=reorder(platform,Numbers),y=Numbers))+geom_bar(stat="identity",fill="steelblue")+theme_minimal()+coord_flip()+geom_text(aes(label=Numbers),vjust=0.5,color="black",size=4.0)+ylab("Total Number of Sales")+xlab("Platform")+ggtitle("Top  Selling Video Game Platforms")
sales_publisher<-as.data.frame(table(vgsales$Publisher))
colnames(sales_publisher)<-c("publisher","numbers")
sales_publisher<-sales_publisher[order(-sales_publisher$numbers),]
top_20_sales_publisher<-head(sales_publisher,n=20)
View(top_20_sales_publisher)
ggplot(top_20_sales_publisher,aes(x=reorder(publisher,numbers),y=Numbers))+geom_bar(stat="identity",fill="orange")+theme_minimal()+coord_flip()+geom_text(aes(label=numbers),vjust=0.5,color="black",size=4.0)+ylab("Total Number of Sales")+xlab("Publisher")+ggtitle("Top  Selling Publishers")
ggplot(top_20_sales_publisher,aes(x=reorder(publisher,numbers),y=numbers))+geom_bar(stat="identity",fill="orange")+theme_minimal()+coord_flip()+geom_text(aes(label=numbers),vjust=0.5,color="black",size=4.0)+ylab("Total Number of Sales")+xlab("Publisher")+ggtitle("Top  Selling Publishers")
sales_year<-as.data.frame(table(vgsales$Year))
View(sales_year)
colnames(sales_year)<-c("Year","Numbers")
ggplot(sales_year,aes(x=Year,y=Numbers))+geom_bar(stat="identity",fill="lightgreen")+theme_minimal()+geom_text(aes(label=numbers),vjust=0.5,color="black",size=4.0)+ylab("Total Number of Sales")+xlab("Year")+ggtitle("Top  Selling Publishers")
ggplot(sales_year,aes(x=Year,y=Numbers))+geom_bar(stat="identity",fill="lightgreen")+theme_minimal()+geom_text(aes(label=Numbers),vjust=0.5,color="black",size=4.0)+ylab("Total Number of Sales")+xlab("Year")+ggtitle("Top  Selling Publishers")
ggplot(sales_year,aes(x=Year,y=Numbers))+geom_bar(stat="identity",fill="lightgreen")+theme(axis.text=element_text(size=12))+geom_text(aes(label=Numbers),vjust=0.5,color="black",size=4.0)+ylab("Total Number of Sales")+xlab("Year")+ggtitle("Top  Selling Publishers")
ggplot(sales_year,aes(x=Year,y=Numbers))+geom_bar(stat="identity",fill="lightgreen")+theme(axis.text=element_text(size=5))+geom_text(aes(label=Numbers),vjust=0.5,color="black",size=4.0)+ylab("Total Number of Sales")+xlab("Year")+ggtitle("Top  Selling Publishers")
ggplot(sales_year,aes(x=Year,y=Numbers))+geom_bar(stat="identity",fill="lightgreen")+theme(axis.text=element_text(size=6))+geom_text(aes(label=Numbers),vjust=0.5,color="black",size=4.0)+ylab("Total Number of Sales")+xlab("Year")+ggtitle("Top  Selling Publishers")
ggplot(sales_year,aes(x=Year,y=Numbers))+geom_bar(stat="identity",fill="blue")+theme(axis.text=element_text(size=6))+geom_text(aes(label=Numbers),vjust=0.5,color="black",size=4.0)+ylab("Total Number of Sales")+xlab("Year")+ggtitle("Top  Selling Publishers")
ggplot(sales_year,aes(x=Year,y=Numbers))+geom_bar(stat="identity",fill="yellow")+theme(axis.text=element_text(size=6))+geom_text(aes(label=Numbers),vjust=0.5,color="black",size=4.0)+ylab("Total Number of Sales")+xlab("Year")+ggtitle("Top  Selling Publishers")
ggplot(sales_year,aes(x=Year,y=Numbers))+geom_bar(stat="identity",fill="lightblue")+theme(axis.text=element_text(size=6))+geom_text(aes(label=Numbers),vjust=0.5,color="black",size=4.0)+ylab("Total Number of Sales")+xlab("Year")+ggtitle("Top  Selling Publishers")
ggplot(sales_year,aes(x=Year,y=Numbers))+geom_bar(stat="identity",fill="lightred")+theme(axis.text=element_text(size=6))+geom_text(aes(label=Numbers),vjust=0.5,color="black",size=4.0)+ylab("Total Number of Sales")+xlab("Year")+ggtitle("Top  Selling Publishers")
ggplot(sales_year,aes(x=Year,y=Numbers))+geom_bar(stat="identity",fill="lightgreen")+theme(axis.text=element_text(size=6))+geom_text(aes(label=Numbers),vjust=0.5,color="black",size=4.0)+ylab("Total Number of Sales")+xlab("Year")+ggtitle("Top  Selling Publishers")
sales_year<-sales_year[-nrow(sales_year),]
ggplot(sales_year,aes(x=Year,y=Numbers))+geom_bar(stat="identity",fill="lightgreen")+theme(axis.text=element_text(size=6))+geom_text(aes(label=Numbers),vjust=0.5,color="black",size=4.0)+ylab("Total Number of Sales")+xlab("Year")+ggtitle("Video Game Sales by Year")
sales_year_revenue<-as.data.frame(aggregate(vgsales$Global_Sales,by=list(Year=vgsales_nintendo$Year),FUN=sum))
sales_year_revenue<-as.data.frame(aggregate(vgsales$Year,by=list(Sales=vgsales_nintendo$Global_Sales),FUN=sum))
sales_year_revenue<-as.data.frame(aggregate(vgsales$Global_Sales,by=list(Year=vgsales$Year),FUN=sum))
View(sales_year_revenue)
sales_year_revenue<-sales_year_revenue[-nrow(sales_year_revenue),]
which(vgsales$Year==2020)
vgsales<-vgsales[!vgsales$Year==2020]
vgsales<-vgsales[!vgsales$Year==2020,]
ggplot(sales_year_revenue,aes(x=Year,y=Sales))+geom_bar(stat="identity",fill="magenta")+theme(axis.text=element_text(size=6))+geom_text(aes(label=Sales),vjust=0.5,color="black",size=4.0)+ylab("Total  Sales Revenue")+xlab("Year")+ggtitle("Video Game Sales revenue by Year")
colnames(sales_year)<-c("Year","Sales")
colnames(sales_year_revenue)<-c("Year","Sales")
colnames(sales_year)<-c("Year","Numbers")
ggplot(sales_year_revenue,aes(x=Year,y=Sales))+geom_bar(stat="identity",fill="magenta")+theme(axis.text=element_text(size=6))+geom_text(aes(label=Sales),vjust=0.5,color="black",size=4.0)+ylab("Total  Sales Revenue")+xlab("Year")+ggtitle("Video Game Sales revenue by Year")
sales_year_revenue<-as.data.frame(aggregate(vgsales$Global_Sales,by=list(Year=vgsales$Year),FUN=sum))
colnames(sales_year_revenue)<-c("Year","Sales")
sales_year_revenue<-sales_year_revenue[-nrow(sales_year_revenue),]
ggplot(sales_year_revenue,aes(x=Year,y=Sales))+geom_bar(stat="identity",fill="magenta")+theme(axis.text=element_text(size=6))+geom_text(aes(label=Sales),vjust=0.5,color="black",size=4.0)+ylab("Total  Sales Revenue")+xlab("Year")+ggtitle("Video Game Sales revenue by Year")
runApp()
runApp()
save.image()
runApp()
publisher<-read.table("./Data/publisher.txt")
View(publisher)
list(publisher$V1)
runApp()
publisher$V1<-as.character(publisher$V1)
publisher<-read.table("./Data/publisher.txt")
publisher$V1<-as.character(publisher$V1)
str(publisher)
runApp()
publisher<-read.table("./Data/publisher.txt")
publisher$V1<-as.character(publisher$V1)
runApp()
runApp()
runApp()
setwd("F:/Blog/VGSales/Shiny/Data/Publisher")
publisher
publisher<-read.table("./Data/publisher.txt")
publisher <- read.table("F:/Blog/VGSales/Shiny/Data/publisher.txt", header=TRUE, quote="\"")
View(publisher)
write.csv(subset(vgsales,vgsales$Publisher=="Activision"),"Activision.csv",row.names = FALSE)
write.csv(subset(vgsales,vgsales$Publisher=="Namco Bandai Games"),"Namco Bandai Games.csv",row.names = FALSE)
write.csv(subset(vgsales,vgsales$Publisher=="Ubisoft"),"Ubisoft.csv",row.names = FALSE)
write.csv(subset(vgsales,vgsales$Publisher=="Konami Digital Entertainment"),"Konami Digital Entertainment.csv",row.names = FALSE)
runApp('F:/Blog/VGSales/Shiny')
runApp('F:/Blog/VGSales/Shiny')
runApp('F:/Blog/VGSales/Shiny')
runApp('F:/Blog/VGSales/Shiny')
write.csv(subset(vgsales,vgsales$Publisher=="THQ"),"THQ.csv",row.names = FALSE)
write.csv(subset(vgsales,vgsales$Publisher=="Nintendo"),"Nintendo.csv",row.names = FALSE)
write.csv(subset(vgsales,vgsales$Publisher=="Sony Computer Entertainment"),"Sony Computer Entertainment.csv",row.names = FALSE)
write.csv(subset(vgsales,vgsales$Publisher=="Sega"),"Sega.csv",row.names = FALSE)
write.csv(subset(vgsales,vgsales$Publisher=="Take-Two Interactive"),"Take-Two Interactive.csv",row.names = FALSE)
write.csv(subset(vgsales,vgsales$Publisher=="Capcom"),"Capcom.csv",row.names = FALSE)
write.csv(subset(vgsales,vgsales$Publisher=="Atari"),"Atari.csv",row.names = FALSE)
write.csv(subset(vgsales,vgsales$Publisher=="Tecmo Koei"),"Tecmo Koei.csv",row.names = FALSE)
write.csv(subset(vgsales,vgsales$Publisher=="Square Enix"),"Square Enix.csv",row.names = FALSE)
write.csv(subset(vgsales,vgsales$Publisher=="Warner Bros. Interactive Entertainment"),"Warner Bros. Interactive Entertainment.csv",row.names = FALSE)
write.csv(subset(vgsales,vgsales$Publisher=="Disney Interactive Studios"),"Disney Interactive Studios.csv",row.names = FALSE)
write.csv(subset(vgsales,vgsales$Publisher=="Eidos Interactive"),"Eidos Interactive.csv",row.names = FALSE)
write.csv(subset(vgsales,vgsales$Publisher=="Midway Games"),"Midway Games.csv",row.names = FALSE)
write.csv(subset(vgsales,vgsales$Publisher=="505 Games"),"505 Games.csv",row.names = FALSE)
write.csv(subset(vgsales,vgsales$Publisher=="Microsoft Game Studios"),"Microsoft Game Studios.csv",row.names = FALSE)
write.csv(subset(vgsales,vgsales$Publisher=="Acclaim Entertainment"),"Acclaim Entertainment.csv",row.names = FALSE)
write.csv(subset(vgsales,vgsales$Publisher=="D3Publisher"),"D3Publisher.csv",row.names = FALSE)
write.csv(subset(vgsales,vgsales$Publisher=="Vivendi Games"),"Vivendi Games.csv",row.names = FALSE)
write.csv(subset(vgsales,vgsales$Publisher=="Codemasters"),"Codemasters.csv",row.names = FALSE)
write.csv(subset(vgsales,vgsales$Publisher=="Idea Factory"),"Idea Factory.csv",row.names = FALSE)
write.csv(subset(vgsales,vgsales$Publisher=="Deep Silver"),"Deep Silver.csv",row.names = FALSE)
write.csv(subset(vgsales,vgsales$Publisher=="Nippon Ichi Software"),"Nippon Ichi Software.csv",row.names = FALSE)
write.csv(subset(vgsales,vgsales$Publisher=="Zoo Digital Publishing"),"Zoo Digital Publishing.csv",row.names = FALSE)
write.csv(subset(vgsales,vgsales$Publisher=="Majesco Entertainment"),"Majesco Entertainment.csv",row.names = FALSE)
publisher_list<-read.table("./Data/publisher.txt")
setwd("F:/Blog/VGSales/Shiny/Data")
setwd("F:/Blog/VGSales/Shiny/Data")
publisher_list<-read.table("./Data/publisher.txt")
setwd("F:/Blog/VGSales/Shiny")
publisher_list<-read.table("./Data/publisher.txt")
View(publisher_list)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
sales_year_global<-as.data.frame(aggregate(vgsales_nintendo$Global_Sales,by=list(Year=vgsales_nintendo$Year),FUN=sum))
View(sales_year_global)
runApp()
sales_year_global<-sales_year_global[-35,]
View(sales_year_global)
ts_sales<-ts(sales_year_global$total_sales,start = 1983)
View(sales_year_global)
runApp()
save.image()
